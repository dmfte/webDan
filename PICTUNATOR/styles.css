* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    --navheight-lg: 55px;
    --navheight-md: 65px;
    --navheight-tab: 50px;
    --navheight-cel: 40px;

    --globalbarh-cel: 35px;
    --globalbarh-tab: 45px;
    --globalbarh-md: 50px;
    --globalbarh-lg: 60px;

    --effectsbarw-cel: 45px;
    --effectsbarw-tab: 55px;
    --effectsbarw-md: 350px;
    --effectsbarw-lg: 400px;

    --downloadbar-cel: 40px;
    --downloadbar-tab: 50px;
    --downloadbar-md: 45px;
    --downloadbar-lg: 50px;

    --floaty-display-x: 50px;
    --floaty-display-y: 50px;
    --floaty-display-w: 150px;
    --floaty-display-h: 150px;

    --color-on: red;
    --color-off: rgb(250, 91, 91);

    --color-global-bg: rgb(47, 57, 95);
    --color-global-btn-bg: rgb(59, 79, 80);
    --color-global-btn-color: rgb(142, 167, 231);
    --color-global-btn-outline: #719B9B;
    --color-global-btn-hover: rgb(34, 45, 46);
    --color-global-btn-active: rgb(90, 123, 124);

    --color-effects-bg: #1e2c2c;
    --color-effects-rb-bg-off: #3c5151;
    --color-effects-rb-bg-on: #4D6666;
    --color-effects-rb-outline: ;
    --color-effects-rb-color-off: #78A1A1;
    --color-effects-rb-color-on: #ACE6E6;
    --color-effects-rb-inside: rgb(92, 166, 173);
    --color-effects-rb-contrls: #ace6e7;
    --color-effects-rb-contrls-hover: #c3f4f5;

    /* --color-slider-bg: rgb(142, 167, 231);
    --color-slider-bg-ligher: rgb(162, 187, 251); */
    --color-slider-bg: rgb(87, 107, 158);
    --color-slider-bg-ligher: rgb(107, 127, 178);
    --color-slider-color: rgb(187, 207, 255);

    --color-display-in-bg: #374949;
    --color-display-out-bg: #3d4f4f;

    --color-dlbar-bg: #576b9e;
    --color-dlbar-btn-bg: #97a5c6;
    --color-dlbar-btn-bg-hover: #aab7d5;
    --color-dlbar-btn-bg-active: #becae6;

}

html,
body {
    height: 100%;
}

body {
    display: flex;
    flex-direction: column;
}

nav#top-nav {
    position: relative;
    background-color: rgb(26, 26, 46);
    display: flex;
    flex-direction: row;
    justify-content: start;
    align-items: stretch;
    padding: 0.2rem 0.5rem;
    overflow: visible;

    /* Same pixels and break points will apply to container-all's margin-top. */
    @media only screen and (max-width: 600px) {
        height: var(--navheight-cel);
    }

    @media only screen and (min-width: 601px) and (max-width: 1024px) {
        height: var(--navheight-tab);
    }

    @media only screen and (min-width: 1025px) and (max-width: 1440px) {
        height: var(--navheight-md);
    }

    @media only screen and (min-width: 1441px) {
        height: var(--navheight-lg);
    }

    & a#logoDmfte {
        position: relative;
        background-color: white;
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        border: 1px solid green;
        padding: 5px;

        @media only screen and (max-width: 600px) {
            width: calc(var(--navheight-cel) * 2);
            border-radius: calc(var(--navheight-cel) / 2);
        }

        @media only screen and (min-width: 601px) and (max-width: 1024px) {
            width: calc(var(--navheight-tab) * 2);
            border-radius: calc(var(--navheight-tab) / 2);
        }

        @media only screen and (min-width: 1025px) and (max-width: 1440px) {
            width: calc(var(--navheight-md) * 2);
            border-radius: calc(var(--navheight-md) / 2);
        }

        @media only screen and (min-width: 1441px) {
            width: calc(var(--navheight-lg) * 2);
            border-radius: calc(var(--navheight-lg) / 2);
        }
    }



    & .nav-items {
        display: flex;
        flex-direction: row;
        justify-content: flex-end;
        align-items: stretch;
        flex: 1;

        & .nav-i {
            max-height: 100%;
            max-width: 100%;
            margin: 0 0.2rem;
            display: flex;
            justify-content: center;
            align-items: stretch;
            cursor: pointer;

            @media only screen and (max-width: 600px) {
                width: calc(var(--navheight-cel) - 1%);
            }

            @media only screen and (min-width: 601px) and (max-width: 1024px) {
                width: calc(var(--navheight-tab) - 1%);
            }

            @media only screen and (min-width: 1025px) and (max-width: 1440px) {
                width: calc(var(--navheight-md) - 1%);
            }

            @media only screen and (min-width: 1441px) {
                width: calc(var(--navheight-lg) - 1%);
            }

            & svg path {
                fill: rgb(67, 101, 139);
            }
        }

        & .nav-i:hover svg path {
            fill: rgb(233, 69, 96);
        }

        & .nav-i:active svg path {
            fill: rgb(233, 69, 96);
        }
    }
}

#containerAll {
    flex: 1;
    display: grid;
    overflow: hidden;

    @media only screen and (max-width: 600px) {
        grid-template-columns: 1fr var(--effectsbarw-cel);
        grid-template-rows: var(--globalbarh-cel) 1fr var(--downloadbar-cel);
        grid-template-areas: "global global" "pictures effects" "download download";
    }

    @media only screen and (min-width: 601px) and (max-width: 1024px) {
        grid-template-columns: 1fr var(--effectsbarw-tab);
        grid-template-rows: var(--globalbarh-tab) 1fr var(--downloadbar-tab);
        grid-template-areas: "global global" "pictures effects" "download download";
    }

    @media only screen and (min-width: 1025px) and (max-width: 1440px) {
        grid-template-columns: var(--effectsbarw-md) 1fr;
        grid-template-rows: var(--globalbarh-md) 1fr var(--downloadbar-md);
        grid-template-areas: "global global" "effects pictures" "download download";
    }

    @media only screen and (min-width: 1441px) {
        grid-template-columns: var(--effectsbarw-lg) 1fr;
        grid-template-rows: var(--globalbarh-lg) 1fr var(--downloadbar-lg);
        grid-template-areas: "global global" "effects pictures" "download download";
    }

    & #globalControls input:is([type=checkbox], [type=file]) {
        display: none;
    }

    & #globalControls {
        --marginctrl: 4px;
        grid-area: global;
        background-color: var(--color-global-bg);
        display: flex;
        justify-content: flex-start;
        align-items: stretch;
        z-index: 4;

        & .g-ctrl {
            outline: none;
            background-color: var(--color-global-btn-bg);
            border: 1px solid var(--color-global-btn-outline);
            color: var(--color-global-btn-color);
            cursor: pointer;
            margin: var(--marginctrl);
            display: flex;
            justify-content: center;
            align-items: center;

            & svg {

                & path {
                    /* Colors are handled innline in HTML. */
                    /* fill: var(--color-global-btn-color); */
                    /* stroke: var(--color-global-btn-color) */
                }
            }

            @media only screen and (max-width: 600px) {
                width: calc(var(--globalbarh-cel) - (var(--marginctrl) * 2));
            }

            @media only screen and (min-width: 601px) and (max-width: 1024px) {

                width: calc(var(--globalbarh-tab) - (var(--marginctrl) * 2));
            }

            @media only screen and (min-width: 1025px) and (max-width: 1440px) {
                width: calc(var(--globalbarh-md) - (var(--marginctrl) * 2));

            }

            @media only screen and (min-width: 1441px) {
                width: calc(var(--globalbarh-lg) - (var(--marginctrl) * 2));

            }
        }

        & .g-ctrl:hover {
            background-color: var(--color-global-btn-hover);
        }

        & .g-ctrl:active {
            background-color: var(--color-global-btn-active);
        }

        & .gctrl2 {

            /* Same as .g-ctrl but twice the width. */
            @media only screen and (max-width: 600px) {
                width: calc((var(--globalbarh-cel) - (var(--marginctrl) * 2)) * 2);
            }

            @media only screen and (min-width: 601px) and (max-width: 1024px) {

                width: calc((var(--globalbarh-tab) - (var(--marginctrl) * 2)) * 2);
            }

            @media only screen and (min-width: 1025px) and (max-width: 1440px) {
                width: calc((var(--globalbarh-md) - (var(--marginctrl) * 2)) * 2);

            }

            @media only screen and (min-width: 1441px) {
                width: calc((var(--globalbarh-lg) - (var(--marginctrl) * 2)) * 2);

            }
        }

        & label[for=ifLoadImg] {
            /* Label for the button to load image. */
            background-color: var(--color-global-btn-bg);
            border: 1px solid var(--color-global-btn-outline);
            margin: var(--marginctrl);
            padding: 0.1em 0.5em 0.1em 0;
            display: flex;
            justify-content: flex-start;
            align-items: stretch;
            width: 200px;
            font-size: 0.8em;
            cursor: pointer;
            overflow: hidden;

            & svg {
                /* max-width: 100%; */
                min-height: 100%;
                margin-right: 0.2em;
            }

            & span {
                user-select: none;
                display: flex;
                align-items: center;
                flex: 1;
                color: var(--color-global-btn-color);
            }
        }

        & label[for=ifLoadImg]:hover {
            background-color: var(--color-global-btn-hover);
        }

        & label[for=ifLoadImg]:active {
            background-color: var(--color-global-btn-active);
        }
    }

    & #effectsBar {
        grid-area: effects;
        background-color: var(--color-effects-bg);
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: stretch;
        /* The following properties will change in Media Queries. */
        padding: 1em 0.5em;
        /* overflow-x: visible; */
        /* overflow-y: auto; */
        z-index: 3;

        @media only screen and (max-width: 1024px) {
            font-size: 0.8em;
            padding: 0.1em 0.2em;
            overflow: visible;
        }

        @media only screen and (min-width: 1025px) {
            overflow: auto;
        }

        & .effect {
            background-color: var(--color-effects-rb-bg-off);
            display: flex;
            flex-direction: column;
            justify-content: flex-start;
            align-items: stretch;
            overflow: hidden;
            /* Border radious = .controls border-radius + margin; */
            border-radius: 14px;

            @media only screen and (max-width: 1024px) {
                margin: 0.1em 0;
            }

            @media only screen and (min-width: 1025px) {
                margin: 0.3em 0;
            }

            & :is([type=checkbox], [type=radio], [type=color]) {
                display: none;
            }

            & .effect-title {
                color: var(--color-effects-rb-color-off);
                align-items: center;
                padding: 1em;
                cursor: pointer;


                @media only screen and (max-width: 1024px) {
                    display: none;
                }

                @media only screen and (min-width: 1025px) {
                    display: flex;
                }

                & span.circle {
                    background-color: var(--color-effects-rb-color-on);
                    border-radius: 50%;
                    width: 0.8em;
                    height: 0.8em;
                    margin-right: 0.5em;
                    transition: 300ms;
                    transform-origin: center;
                    transform: scale(0);
                }
            }

            & .eff-title {
                background-color: var(--color-effects-rb-off);
                color: var(--color-effects-rb-color-off);
                width: 100%;
                justify-content: center;
                align-items: center;
                cursor: pointer;

                @media only screen and (max-width: 600px) {
                    display: flex;
                    height: var(--effectsbarw-cel);
                }

                @media only screen and (min-width: 601px) and (max-width: 1024px) {
                    display: flex;
                    height: var(--effectsbarw-tab);
                }

                @media only screen and (min-width: 1025px) and (max-width: 1440px) {
                    display: none;
                }

                @media only screen and (min-width: 1441px) {
                    display: none;
                }
            }

            & .controls {
                background-color: rgb(120, 162, 161);
                border-radius: 0 0 10px 10px;
                display: flex;
                flex-direction: column;
                justify-content: flex-start;
                align-items: stretch;
                max-height: 0;
                overflow: hidden;
                transition: max-height 400ms linear 0ms, padding 400ms linear 0ms;

                @media only screen and (max-width: 600px) {
                    margin: 1px;
                }
                @media only screen and (min-width: 601px) and (max-width: 1024px) {
                    margin: 2px;
                }
                @media only screen and (min-width: 1025px) and (max-width: 1440px) {
                    margin: 4px;
                }
                @media only screen and (min-width: 1441px) {
                    margin: 5px;
                }

                & .btns {
                    display: flex;
                    justify-content: flex-start;
                    margin-bottom: 0.4rem;

                    @media only screen and (max-width: 1024px) {
                        flex-direction: column;
                    }
                    @media only screen and (min-width: 1025px) {
                        flex-direction: row;
                    }

                    & .btn {
                        position: relative;
                        background-color: var(--color-effects-rb-contrls);
                        border-radius: 10px;
                        display: flex;
                        justify-content: center;
                        align-items: center;
                        margin: 0 3px 0 0;
                        cursor: pointer;

                        & svg {
                            max-width: 100%;
                            max-height: 100%;
                        }

                        & div#hatchCurrentDir {
                            scale: 0.9;
                            flex: 1;
                            display: flex;
                            justify-content: center;
                            align-items: center;
                            overflow: hidden;
                        }

                        @media only screen and (max-width: 600px) {
                            width: calc(var(--effectsbarw-cel) - 10px);
                            height: calc(var(--effectsbarw-cel) - 10px);
                            align-self: center;
                        }

                        @media only screen and (min-width: 601px) and (max-width: 1024px) {
                            width: calc(var(--effectsbarw-tab) - 12px);
                            height: calc(var(--effectsbarw-tab) - 12px);
                            align-self: center;
                        }

                        @media only screen and (min-width: 1025px) and (max-width: 1440px) {
                            width: calc(var(--effectsbarw-cel));
                            height: calc(var(--effectsbarw-cel));
                            align-self: flex-start;
                        }

                        @media only screen and (min-width: 1441px) {
                            width: calc(var(--effectsbarw-tab));
                            height: calc(var(--effectsbarw-tab));
                            align-self: flex-start;
                        }
                    }

                    & input[type=color]+label {
                        border-radius: 50%;
                        border: 5px solid #ffffff;
                        background-color: #ff0000;
                    }

                    & .btn:hover:not(label[for=icGridColor]) {
                        background-color: var(--color-effects-rb-contrls-hover);
                    }

                    & label[for=cbGraysBlack] {
                        display: flex;
                        align-items: stretch;

                        & span {
                            flex: 1;
                        }

                        & span.stripe1 {
                            background-color: rgb(64, 64, 64);
                        }

                        & span.stripe2 {
                            background-color: rgb(160, 160, 160);
                        }

                        & span.stripe3 {
                            background-color: rgb(127, 127, 127);
                        }
                    }

                    & input:checked~label[for=cbGraysBlack] {

                        & span.stripe1 {
                            background-color: rgb(0, 0, 0);
                        }

                        & span.stripe3 {
                            background-color: rgb(255, 255, 255);
                        }
                    }

                    & .btn.supermenu {
                        position: relative;
                        /* These properties will change on :focus-within. */
                        overflow: hidden;
                        cursor: pointer;

                        & .submenu {
                            position: absolute;
                            background-color: var(--color-effects-rb-contrls);
                            top: 100%;
                            display: grid;
                            grid-template-columns: 1fr 1fr 1fr 1fr;
                            max-width: 0;
                            /* overflow: hidden; */
                            transition: 500ms ease-in-out;
                            z-index: 2;
                            /* The following properties will change in Media Queries. */
                            left: 0;
                            right: unset;

                            & input~label {
                                scale: 0.9;
                                cursor: pointer;

                                @media only screen and (max-width: 600px) {
                                    width: calc(var(--effectsbarw-cel) - 6px);
                                    height: calc(var(--effectsbarw-cel) - 6px);
                                    align-self: center;
                                }

                                @media only screen and (min-width: 601px) and (max-width: 1024px) {
                                    width: calc(var(--effectsbarw-tab) - 12px);
                                    height: calc(var(--effectsbarw-tab) - 12px);
                                    align-self: center;
                                }

                                @media only screen and (min-width: 1025px) and (max-width: 1440px) {
                                    width: calc(var(--effectsbarw-cel));
                                    height: calc(var(--effectsbarw-cel));
                                    align-self: flex-start;
                                }

                                @media only screen and (min-width: 1441px) {
                                    width: calc(var(--effectsbarw-tab));
                                    height: calc(var(--effectsbarw-tab));
                                    align-self: flex-start;
                                }
                            }
                        }

                        & #hatchCurrentDir {
                            position: relative;
                            width: 100%;
                            height: 100%;
                            /* border: 3px solid red; */

                            & svg {
                                position: absolute;
                                max-width: unset;
                                min-height: 100%;
                                left: 0%;
                                transition: left 500ms ease-in-out;
                            }
                        }

                        /* This selects the SVG insde of .hatchCurrentDir div.
                         It changes the SVG position depending on the checked checkbox
                         inside of .submenu (sibling of #hatchCurrentDir) */
                        & #hatchCurrentDir:has(~.submenu #hatchdirDLUR:checked) svg {
                            left: 0;
                        }

                        & #hatchCurrentDir:has(~.submenu #hatchdirLR:checked) svg {
                            left: -100%;
                        }

                        & #hatchCurrentDir:has(~.submenu #hatchdirULDR:checked) svg {
                            left: -200%;
                        }

                        & #hatchCurrentDir:has(~.submenu #hatchdirUD:checked) svg {
                            left: -300%;
                        }


                    }

                    & .btn.supermenu:focus-within {
                        overflow: visible;
                        cursor: default;

                        & .submenu {

                            @media only screen and (max-width: 600px) {
                                max-width: var(--effectsbarw-md);
                                left: unset;
                                right: 0;
                            }

                            @media only screen and (min-width: 601px) and (max-width: 1024px) {
                                left: unset;
                                right: 0;
                                max-width: var(--effectsbarw-lg);
                            }

                            @media only screen and (min-width: 1025px) and (max-width: 1440px) {
                                max-width: var(--effectsbarw-md);
                            }

                            @media only screen and (min-width: 1441px) {
                                max-width: var(--effectsbarw-lg);
                            }

                            & input~label:hover {
                                background-color: var(--color-effects-rb-contrls-hover);

                                & svg path {
                                    stroke: rgb(10, 17, 88);
                                }
                            }
                        }
                    }
                }

                & .rs-wrapper {
                    position: relative;
                    border-radius: 10px;
                    margin-bottom: 0.4rem;

                    & .slider {
                        font-size: 12px;
                        border-radius: 1em;
                        position: relative;
                        overflow: hidden;

                        @media only screen and (max-width: 1024px) {
                            width: 0;
                        }

                        @media only screen and (min-width: 1025px) {
                            height: calc(var(--effectsbarw-cel) * 1.2);
                        }

                        & .rs-title {
                            font-size: 12px;
                            /* border: 4px solid red; */
                        }

                        & .rs-min {
                            font-size: 18px;
                        }

                        & .rs-max {
                            font-size: 18px;
                        }

                    }

                    & .slid {
                        position: absolute;
                        left: 0;
                        top: 0;
                        right: 0;
                        bottom: 0;
                        color: var(--color-slider-color);
                        display: none;
                        justify-content: center;
                        align-items: center;
                        font-size: 0.8em;
                        cursor: pointer;

                        @media only screen and (max-width: 600px) {
                            display: flex;
                        }

                        @media only screen and (min-width: 601px) and (max-width: 1024px) {
                            display: flex;
                        }

                        @media only screen and (min-width: 1025px) and (max-width: 1440px) {}

                        @media only screen and (min-width: 1441px) {}
                    }

                    @media only screen and (max-width: 600px) {
                        background-color: var(--color-slider-bg);
                        width: calc(var(--effectsbarw-cel) - 10px);
                        height: calc(var(--effectsbarw-cel) - 10px);
                        align-self: center;
                        cursor: pointer;
                    }

                    @media only screen and (min-width: 601px) and (max-width: 1024px) {
                        background-color: var(--color-slider-bg);
                        width: calc(var(--effectsbarw-tab) - 12px);
                        height: calc(var(--effectsbarw-tab) - 12px);
                        align-self: center;
                        cursor: pointer;
                    }

                    @media only screen and (min-width: 1025px) and (max-width: 1440px) {
                        align-self: stretch;
                    }

                    @media only screen and (min-width: 1441px) {
                        align-self: stretch;
                    }
                }

                & .rs-wrapper:focus-within {
                    background-color: var(--color-slider-bg-ligher);

                    @media only screen and (max-width: 600px) {

                        & .slider {
                            translate: -100% 0;
                            width: var(--effectsbarw-md);
                            transition: width 300ms;
                        }
                    }

                    @media only screen and (min-width: 601px) and (max-width: 1024px) {

                        & .slider {
                            translate: -100% 0;
                            width: var(--effectsbarw-lg);
                            transition: width 300ms;
                        }
                    }

                    @media only screen and (min-width: 1025px) and (max-width: 1440px) {}

                    @media only screen and (min-width: 1441px) {}
                }

            }

        }

        & .effect:has([name=rbgEffects]:checked) {
            /* INCLUDE AL CHANGES WHEN A RB IS CHECKED HERE, THE HIGHEST PARENT BEING AFFECTED BY THE RB. */
            background-color: var(--color-effects-rb-bg-on);
            overflow: visible;

            & .effect-title {
                color: var(--color-effects-rb-color-on);

                & span.circle {
                    transform: scale(1);
                }
            }

            & .eff-title {
                color: var(--color-effects-rb-color-on);
                font-size: 0.9em;
            }

            & .controls {
                padding: 3px;
                max-height: 50vh;
                overflow: visible;
            }

            & .controls:has(.rs-wrapper:focus-within) {

                @media only screen and (max-width: 1440px) {
                    overflow: visible;
                }
            }
        }
    }


    & #picturesArea {
        background-color: rgb(0, 0, 0);
        position: relative;
        grid-area: pictures;
        display: flex;
        z-index: 2;

        & .display {
            position: absolute;
            display: flex;
            justify-content: center;
            align-items: center;
            overflow: hidden;
            transition: 500ms ease-in-out;

            & canvas {
                /* border: 5px solid purple; */
                max-width: 97%;
                max-height: 97%;
            }
        }

        & .display.img-in {
            background-color: var(--color-display-in-bg);
            top: 0;
            left: 0;
            z-index: 2;
        }

        & .display.img-out {
            background-color: var(--color-display-out-bg);
            bottom: 0;
            right: 0;
            z-index: 1;
        }
    }

    /* This will be controlled by the #cbHorzVert button in the globalControls toolbar. */
    & #globalControls:has(#cbHorzVert)~#picturesArea {
        flex-direction: row;

        & .display {
            width: 50%;
            height: 100%;
        }
    }

    & #globalControls:has(#cbHorzVert:checked)~#picturesArea {
        flex-direction: column;

        & .display {
            width: 100%;
            height: 50%;
        }
    }

    /* This will be controled by the #cbFloatOriginal checkbox in the globalControls toolbar. */
    & #globalControls:has(#cbFloatOriginal:checked)~#picturesArea {

        & .display.img-in {
            transition: none;
            /* transition will dynamically change in JS when the #cbGridHorzVert is checked/unchecked. */
            touch-action: none;
            cursor: move;
            left: var(--floaty-display-x);
            top: var(--floaty-display-y);
            width: var(--floaty-display-w);
            height: var(--floaty-display-h);
        }

        & .display.img-out {
            width: 100%;
            height: 100%;
        }
    }

    & #downloadBar {
        grid-area: download;
        background-color: var(--color-dlbar-bg);
        display: flex;
        justify-content: flex-end;
        padding: 0.3rem 1rem;
        z-index: 4;

        & .dl-btn {
            background-color: var(--color-dlbar-btn-bg);
            color: var(--dlbar-btn-color);
            border: 1px solid var(--color-dlbar-btn-outline);
        }

        & .dl-btn:hover {
            cursor: pointer;
            background-color: var(--color-dlbar-btn-bg-hover);
        }

        & .dl-btn:active {
            background-color: var(--color-dlbar-btn-bg-active);
        }

        & #dlDownload {
            width: 100px;

            & svg {
                max-width: 85%;
                max-height: 85%;
            }
        }
    }
}