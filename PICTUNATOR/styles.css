@font-face {
    font-family: "NovaMono";
    src: url(./fonts/NovaMono-Regular.ttf);
}
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    user-select: none;
    font-family: NovaMono;
    font-weight: 100;
}

:root {

    @media only screen and (max-width: 600px) {
        --controlsbar-w: 45px;
        --all-grid-columns: 1fr var(--controlsbar-w);
        --controlsbar-padd: 1px;
        --controls-padd: 1px;
        --rs-width: 350px;

        --topbar-height: 20px;
        --topbar-padd-y: 0rem;
        --topbar-padd-x: 0.2rem;
        --navbar-submenu-w: 200px;
    }

    @media only screen and (min-width: 601px) and (max-width: 1024px) {
        --controlsbar-w: 55px;
        --all-grid-columns: 1fr var(--controlsbar-w);
        --controls-padd: 0.1rem;
        --controlsbar-padd: 0.2rem;
        --rs-width: 400px;

        --topbar-height: 30px;
        --topbar-padd-y: 0.1rem;
        --topbar-padd-x: 0.2rem;
        --navbar-submenu-w: 250px;
    }

    @media only screen and (min-width: 1025px) and (max-width: 1440px) {
        --controlsbar-w: 350px;
        --all-grid-columns: var(--controlsbar-w) 1fr;
        --controls-padd: 0.2rem;
        --controlsbar-padd: 0.3rem;
        --rs-width: 100%;

        --topbar-height: 35px;
        --topbar-padd-y: 0.2rem;
        --topbar-padd-x: 0.5rem;
        --navbar-submenu-w: 300px;
    }

    @media only screen and (min-width: 1441px) {
        --controlsbar-w: 400px;
        --all-grid-columns: var(--controlsbar-w) 1fr;
        --controls-padd: 0.2rem;
        --controlsbar-padd: 0.4rem;
        --rs-width: 100%;

        --topbar-height: 45px;
        --topbar-padd-y: 0.2rem;
        --topbar-padd-x: 0.5rem;
        --navbar-submenu-w: 350px
    }

    --navheight-lg: 55px;
    --navheight-md: 65px;
    --navheight-tab: 50px;
    --navheight-cel: 40px;

    --globalbarh-cel: 35px;
    --globalbarh-tab: 45px;
    --globalbarh-md: 50px;
    --globalbarh-lg: 60px;

    --controlsBar-cel: 45px;
    --controlsBar-tab: 55px;
    --controlsBar-md: 350px;
    --controlsBar-lg: 400px;

    --downloadbar-cel: 40px;
    --downloadbar-tab: 50px;
    --downloadbar-md: 45px;
    --downloadbar-lg: 50px;

    --floaty-display-x: 50px;
    --floaty-display-y: 50px;
    --floaty-display-w: 150px;
    --floaty-display-h: 150px;

    --color-on: red;
    --color-off: rgb(250, 91, 91);

    --color-global-bg: rgb(47, 57, 95);
    --color-global-btn-bg: rgb(59, 79, 80);
    --color-global-btn-color: rgb(142, 167, 231);
    --color-global-btn-outline: #719B9B;
    --color-global-btn-hover: rgb(34, 45, 46);
    --color-global-btn-active: rgb(90, 123, 124);

    --color-ctrlsbar-bg: #1e2c2c;
    --color-effects-rb-bg-off: #3c5151;
    --color-effects-rb-bg-on: #617c7c;
    /* --color-effects-rb-outline:; */
    --color-controls-btn: rgb(121, 145, 206);
    --color-controls-btn-hover: rgb(142, 167, 231);
    --color-controls-btn-active: #c5e8e8;
    --color-controls-btn-checked: #9dcaca;
    --color-effects-rb-color-on: #ACE6E6;
    --color-effects-rb-inside: rgb(92, 166, 173);
    --color-controls-bg: #8fbcbd;
    /* --color-controls-bg-hover: #c3f4f5; */

    /* --color-slider-bg: rgb(142, 167, 231);
    --color-slider-bg-ligher: rgb(162, 187, 251); */
    --color-slider-bg: rgb(87, 107, 158);
    --color-slider-bg-ligher: rgb(107, 127, 178);
    --color-slider-color: rgb(187, 207, 255);

    --color-display-in-bg: #374949;
    --color-display-out-bg: #3d4f4f;

    --color-dlbar-bg: #576b9e;
    --color-dlbar-btn-bg: #97a5c6;
    --color-dlbar-btn-bg-hover: #aab7d5;
    --color-dlbar-btn-bg-active: #becae6;

}

html,
body {
    height: 100%;
}

body {
    display: flex;
    flex-direction: column;
}


#top-bar {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    background-color: rgb(26, 26, 46);
    display: flex;
    flex-direction: row;
    justify-content: start;
    align-items: stretch;
    padding: var(--topbar-padd-y) var(--topbar-padd-x);
    height: var(--topbar-height);
    overflow: visible;


    & a#logoDmfte {
        position: relative;
        background-color: white;
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        border: 1px solid gray;
        padding: 5px;

        @media only screen and (max-width: 600px) {
            width: calc(var(--topbar-height) * 2);
            border-radius: calc(var(--topbar-height) / 2);
        }

        @media only screen and (min-width: 601px) and (max-width: 1024px) {
            width: calc(var(--topbar-height) * 2);
            border-radius: calc(var(--topbar-height) / 2);
        }

        @media only screen and (min-width: 1025px) and (max-width: 1440px) {
            width: calc(var(--topbar-height) * 2);
            border-radius: calc(var(--topbar-height) / 2);
        }

        @media only screen and (min-width: 1441px) {
            width: calc(var(--topbar-height) * 2);
            border-radius: calc(var(--topbar-height) / 2);
        }
    }



    & .topbar-items {
        margin-left: auto;
        display: flex;
        justify-content: flex-end;

        & .topbar-i {
            max-height: 100%;
            width: calc(var(--topbar-height) - (var(--topbar-padd-y) * 2));
            /* margin: 0 0.2rem; */
            /* display: flex;
            justify-content: center;
            align-items: stretch; */
            cursor: pointer;


            & svg path {
                fill: rgb(67, 101, 139);
            }
        }

        & .topbar-i:hover svg path {
            fill: rgb(233, 69, 96);
        }

        & .topbar-i:active svg path {
            fill: rgb(233, 69, 96);
        }
    }
}



#containerAll {
    margin-top: var(--topbar-height);
    flex: 1;
    display: grid;
    grid-template-columns: var(--all-grid-columns);
    overflow: hidden;

    @media only screen and (max-width: 600px) {
        /* grid-template-columns: 1fr var(--all-grid-columns); */
        grid-template-rows: var(--globalbarh-cel) var(--globalbarh-cel) 1fr;
        grid-template-areas: "global global""effects effects""pictures controls";
    }

    @media only screen and (min-width: 601px) and (max-width: 1024px) {
        /* grid-template-columns: 1fr var(--all-grid-columns); */
        grid-template-rows: var(--globalbarh-tab) var(--globalbarh-tab) 1fr;
        grid-template-areas: "global global""effects effects""pictures controls";
    }

    @media only screen and (min-width: 1025px) and (max-width: 1440px) {
        /* grid-template-columns: var(--all-grid-columns) 1fr; */
        grid-template-rows: var(--globalbarh-md) var(--globalbarh-md) 1fr;
        grid-template-areas: "global global""effects effects""controls pictures";
    }

    @media only screen and (min-width: 1441px) {
        /* grid-template-columns: var(--all-grid-columns) 1fr; */
        grid-template-rows: var(--globalbarh-lg) var(--globalbarh-lg) 1fr;
        grid-template-areas: "global global""effects effects""controls pictures";
    }

    & #globalControls input:is([type=checkbox], [type=file]) {
        display: none;
    }

    & #globalControls {
        --gctrls-padd: 5px;

        grid-area: global;
        background-color: var(--color-global-bg);
        padding: var(--gctrls-padd) 0.5rem;
        display: flex;
        justify-content: flex-start;
        align-items: stretch;
        z-index: 4;

        & .g-ctrl {
            outline: none;
            background-color: var(--color-global-btn-bg);
            border: 1px solid var(--color-global-btn-outline);
            color: var(--color-global-btn-color);
            margin: 0 var(--gctrls-padd) 0 0;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;

            & svg {
                max-height: 100%;

                & path {
                    /* Colors are handled innline in HTML. */
                }
            }
        }

        & .g-ctrl:hover {
            background-color: var(--color-global-btn-hover);
        }

        & .g-ctrl:active {
            background-color: var(--color-global-btn-active);
        }


        & label[for=ifLoadImg] {
            /* Label for the button to load image. */
            font-size: 0.8em;
            cursor: pointer;
            display: flex;
            flex-direction: row;
            justify-content: flex-start;
            align-items: stretch;
            overflow: hidden;

            & svg {
                margin-right: 0.2em;
            }

            & span {
                /* For the name of the image file. */
                display: flex;
                align-items: center;
                flex: 1;
                color: var(--color-global-btn-color);
            }
        }

        & label[for=ifLoadImg]:hover {
            background-color: var(--color-global-btn-hover);
        }

        & label[for=ifLoadImg]:active {
            background-color: var(--color-global-btn-active);
        }

        & #dlDownload {
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 0;
            margin: 0 0 0 auto;

            & svg {
                margin: 0;
                /* border: 1px solid red; */

                @media only screen and (max-width: 1024px) {
                    padding: 0.1rem;
                    height: 120%;
                }

                @media only screen and (min-width: 1025px) {
                    padding: 0.4rem;
                    height: 100%;
                }

            }
        }

        /* Classes to define different widths inside of the Global Actions bar. */
        & .gctrl1 {
            @media only screen and (max-width: 600px) {
                width: calc(var(--globalbarh-cel) - (var(--gctrls-padd) * 2));
            }

            @media only screen and (min-width: 601px) and (max-width: 1024px) {
                width: calc(var(--globalbarh-tab) - (var(--gctrls-padd) * 2));
            }

            @media only screen and (min-width: 1025px) and (max-width: 1440px) {
                width: calc(var(--globalbarh-md) - (var(--gctrls-padd) * 2));
            }

            @media only screen and (min-width: 1441px) {
                width: calc(var(--globalbarh-lg) - (var(--gctrls-padd) * 2));
            }
        }

        & .gctrl2 {
            @media only screen and (max-width: 600px) {
                width: calc((var(--globalbarh-cel) - (var(--gctrls-padd) * 2)) * 2);
            }

            @media only screen and (min-width: 601px) and (max-width: 1024px) {
                width: calc((var(--globalbarh-tab) - (var(--gctrls-padd) * 2)) * 2);
            }

            @media only screen and (min-width: 1025px) and (max-width: 1440px) {
                width: calc((var(--globalbarh-md) - (var(--gctrls-padd) * 2)) * 2);
            }

            @media only screen and (min-width: 1441px) {
                width: calc((var(--globalbarh-lg) - (var(--gctrls-padd) * 2)) * 2);
            }
        }

        & .gctrl3 {
            @media only screen and (max-width: 600px) {
                width: calc((var(--globalbarh-cel) - (var(--gctrls-padd) * 2)) * 3);
            }

            @media only screen and (min-width: 601px) and (max-width: 1024px) {
                width: calc((var(--globalbarh-tab) - (var(--gctrls-padd) * 2)) * 3);
            }

            @media only screen and (min-width: 1025px) and (max-width: 1440px) {
                width: calc((var(--globalbarh-md) - (var(--gctrls-padd) * 2)) * 3);
            }

            @media only screen and (min-width: 1441px) {
                width: calc((var(--globalbarh-lg) - (var(--gctrls-padd) * 2)) * 3);
            }
        }

        & .gctrl6 {
            @media only screen and (max-width: 600px) {
                width: calc((var(--globalbarh-cel) - (var(--gctrls-padd) * 2)) * 6);
            }

            @media only screen and (min-width: 601px) and (max-width: 1024px) {
                width: calc((var(--globalbarh-tab) - (var(--gctrls-padd) * 2)) * 6);
            }

            @media only screen and (min-width: 1025px) and (max-width: 1440px) {
                width: calc((var(--globalbarh-md) - (var(--gctrls-padd) * 2)) * 6);
            }

            @media only screen and (min-width: 1441px) {
                width: calc((var(--globalbarh-lg) - (var(--gctrls-padd) * 2)) * 6);
            }
        }
    }

    & #globalControls:not(:has(#cbHorzVert:checked))~#picturesArea {
        flex-direction: row;

        & .display {
            width: 50%;
            height: 100%;
        }
    }

    & #globalControls:has(#cbHorzVert:checked)~#picturesArea {
        flex-direction: column;

        & .display {
            width: 100%;
            height: 50%;
        }
    }

    & #globalControls:has(#cbFloatOriginal:checked)~#picturesArea {

        & .display.img-in {
            transition: none;
            /* transition will dynamically change in JS when the #cbGridHorzVert is checked/unchecked. */
            touch-action: none;
            cursor: move;
            left: var(--floaty-display-x);
            top: var(--floaty-display-y);
            width: var(--floaty-display-w);
            height: var(--floaty-display-h);
        }

        & .display.img-out {
            width: 100%;
            height: 100%;
        }
    }

    & #effectsBar {
        grid-area: effects;
        background-color: var(--color-ctrlsbar-bg);
        padding: 0.2rem 0.3rem;
        display: flex;
        overflow: auto;

        & .effect-title {
            border-radius: 25px;
            background-color: var(--color-effects-rb-bg-on);
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 0 0.8rem;
            margin: 0 0.2rem;
            white-space: nowrap;
            cursor: pointer;
        }
    }

    & #effectsBar:has(~ #controlsBar #rgEffGrid:checked) label[for=rgEffGrid] {
        background-color: var(--color-effects-rb-bg-on);
    }

    & #effectsBar:has(~ #controlsBar #rgEffPixelate:checked) label[for=rgEffPixelate] {
        background-color: var(--color-effects-rb-bg-on);
    }

    & #effectsBar:has(~ #controlsBar #rgEffGrays:checked) label[for=rgEffGrays] {
        background-color: var(--color-effects-rb-bg-on);
    }

    & #effectsBar:has(~ #controlsBar #rgEffHatching:checked) label[for=rgEffHatching] {
        background-color: var(--color-effects-rb-bg-on);
    }

    & #effectsBar:has(~ #controlsBar #rgEffCrossh:checked) label[for=rgEffCrossh] {
        background-color: var(--color-effects-rb-bg-on);
    }


    & #controlsBar {
        position: relative;
        grid-area: controls;
        background-color: var(--color-ctrlsbar-bg);
        padding: var(--controlsbar-padd);
        width: var(--controlsbar-w);
        z-index: 20;

        @media only screen and (max-width: 1024px) {
            overflow: visible;
        }

        @media only screen and (min-width: 1025px) {
            overflow: auto;
        }

        & input:not([type=text]) {
            display: none;
        }

        & .controls {
            /* --controls-padd: 0.2rem; */
            background-color: var(--color-controls-bg);
            /* width: 100%; */
            border-radius: 0.5rem;
            padding: var(--controls-padd);
            display: none;
            flex-direction: column;
            justify-content: flex-start;
            align-items: stretch;
            /* overflow: visible; */

            & .title {
                /* display: flex; */
                justify-content: center;
                font-size: 1.5em;

                @media only screen and (max-width: 1024px) {
                    display: none;
                }

                @media only screen and (min-width: 1025px) {
                    display: flex;
                }

            }

            & .btns {
                display: flex;
                margin-bottom: 2px;

                @media only screen and (max-width: 600px) {
                    flex-direction: column;
                    align-items: center;
                }

                @media only screen and (min-width: 601px) and (max-width: 1024px) {
                    align-items: center;
                    flex-direction: column;
                }

                @media only screen and (min-width: 1025px) and (max-width: 1440px) {
                    flex-direction: row;
                }

                @media only screen and (min-width: 1441px) {
                    flex-direction: row;
                }

                & input~label:hover {
                    background-color: var(--color-controls-btn-hover);
                }

                & input:checked+label {
                    background-color: var(--color-controls-btn-checked);
                    scale: 0.85;
                }

                & input~label:active {
                    background-color: var(--color-controls-btn-active);
                }

                & .btn {
                    background-color: var(--color-controls-btn);
                    border-radius: 0.5rem;
                    position: relative;
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    overflow: hidden;
                    cursor: pointer;

                    @media only screen and (max-width: 1024px) {
                        /* border: 1px solid red; */
                        width: calc(var(--controlsbar-w) - (var(--controlsbar-padd) * 2) - (var(--controls-padd) * 2));
                        height: calc(var(--controlsbar-w) - (var(--controlsbar-padd) * 2) - (var(--controls-padd) * 2));
                        margin-bottom: 2px;
                    }

                    @media only screen and (min-width: 1025px) {
                        width: calc((var(--controlsbar-w) - (var(--controlsbar-padd) * 2) - var(--controls-padd) * 2) / 7);
                        height: calc((var(--controlsbar-w) - (var(--controlsbar-padd) * 2) - var(--controls-padd) * 2) / 7);
                        margin-right: 1px;
                    }
                }

                & .btn:hover:not(.icolor, [for=cbGraysBlack]) {
                    background-color: var(--color-controls-btn-hover);
                }

                & .btn:active {
                    background-color: var(--color-controls-btn-active);
                }

                & .btn.supermenu {
                    position: relative;
                    overflow: hidden;
                    z-index: 2;
                    display: flex;
                    justify-content: center;
                    align-items: center;

                    & .submenu-activator {
                        width: 100%;
                        height: 100%;
                    }

                    & .submenu {
                        position: absolute;
                        background-color: var(--color-controls-btn);
                        overflow: hidden;
                        display: flex;
                        flex-direction: row;
                        justify-content: flex-start;
                        align-items: stretch;
                        max-width: 0;
                        box-shadow: none;
                        transition: max-width 300ms ease-in-out;

                        @media only screen and (max-width: 1024px) {
                            top: 0;
                            left: unset;
                            right: 115%;
                        }

                        @media only screen and (min-width: 1025px) {
                            top: 100%;
                            left: 0;
                            right: unset;
                        }

                        & input~label {
                            cursor: pointer;
                            width: calc((350px - (var(--controlsbar-padd) * 2) - var(--controls-padd) * 2) / 8);
                            height: calc((350px - (var(--controlsbar-padd) * 2) - var(--controls-padd) * 2) / 8);
                        }
                    }
                }

                & .btn.supermenu:focus-within {
                    overflow: visible;

                    & .submenu {
                        max-width: 350px;
                        box-shadow: 0 0 15px 15px var(--color-controls-btn-active);
                    }
                }

                & .btn.icolor {
                    /* background-color will be defined in JavaScript. */
                    border-radius: 50%;
                    border: 5px solid white;
                }

                & .btn[for=cbGraysBlack] {
                    display: flex;
                    align-items: stretch;

                    & span {
                        flex: 1;
                    }

                    & span.stripe1 {
                        background-color: rgb(54, 54, 54);
                    }

                    & span.stripe2 {
                        background-color: rgb(160, 160, 160);
                    }

                    & span.stripe3 {
                        background-color: rgb(197, 197, 197);
                    }
                }

                & input:checked~.btn[for=cbGraysBlack] {

                    & span.stripe1 {
                        background-color: rgb(0, 0, 0);
                    }

                    & span.stripe3 {
                        background-color: rgb(255, 255, 255);
                    }
                }

                & .btn#hatchDirs {

                    & #hatchCurrentDir {
                        position: relative;
                        width: 100%;
                        height: 100%;
                        scale: 0.9;
                        overflow: hidden;
                        /* border: 1px solid red; */

                        #svghatchdirections {
                            height: 100%;
                            width: 400%;
                            position: relative;
                            left: 0;
                            transition: left 300ms ease-in-out;
                        }
                    }

                    & #hatchCurrentDir:has(~.submenu #hatchdirDLUR:checked) #svghatchdirections {
                        left: 0;

                    }

                    & #hatchCurrentDir:has(~.submenu #hatchdirLR:checked) #svghatchdirections {
                        left: -100%;

                    }

                    & #hatchCurrentDir:has(~.submenu #hatchdirULDR:checked) #svghatchdirections {
                        left: -200%;

                    }

                    & #hatchCurrentDir:has(~.submenu #hatchdirUD:checked) #svghatchdirections {
                        left: -300%;

                    }
                }

                & .btn#cbgCrosshDirs:has(.submenu #crosshdirDLUR) {

                    & #svgpCrosshDLUR {
                        display: none;
                    }
                }

                & .btn#cbgCrosshDirs:has(.submenu #crosshdirDLUR:checked) {

                    & #svgpCrosshDLUR {
                        display: inherit;
                    }
                }

                /* --- */

                & .btn#cbgCrosshDirs:has(.submenu #crosshdirLR) {

                    & #svgpCrosshLR {
                        display: none;
                    }
                }

                & .btn#cbgCrosshDirs:has(.submenu #crosshdirLR:checked) {

                    & #svgpCrosshLR {
                        display: inherit;
                    }
                }

                /* --- */

                & .btn#cbgCrosshDirs:has(.submenu #crosshdirULDR) {

                    & #svgpCrosshULDR {
                        display: none;
                    }
                }

                & .btn#cbgCrosshDirs:has(.submenu #crosshdirULDR:checked) {

                    & #svgpCrosshULDR {
                        display: inherit;
                    }
                }

                /* --- */

                & .btn#cbgCrosshDirs:has(.submenu #crosshdirUD) {

                    & #svgpCrosshUD {
                        display: none;
                    }
                }

                & .btn#cbgCrosshDirs:has(.submenu #crosshdirUD:checked) {

                    & #svgpCrosshUD {
                        display: inherit;
                    }
                }
            }

            & .rs-wrapper {
                position: relative;
                margin-bottom: 0.2rem;
                font-family: monospace;
                border-radius: 0.5rem;
                background-color: var(--color-controls-btn);

                @media only screen and (max-width: 1024px) {
                    cursor: pointer;
                    width: calc(var(--controlsbar-w) - (var(--controlsbar-padd) * 2) - (var(--controls-padd) * 2));
                    height: calc(var(--controlsbar-w) - (var(--controlsbar-padd) * 2) - (var(--controls-padd) * 2));
                    margin-bottom: 2px;
                    display: flex;
                    justify-content: center;
                    align-items: stretch;
                }

                & .mobile-label {
                    border-radius: 0.5rem;
                    font-size: 1.4em;
                    display: none;
                    justify-content: center;
                    align-items: center;
                    flex: 1;

                    @media only screen and (max-width: 600px) {}

                    @media only screen and (min-width: 601px) and (max-width: 1024px) {
                        display: flex;
                    }

                    @media only screen and (min-width: 1025px) and (max-width: 1440px) {}

                    @media only screen and (min-width: 1441px) {}
                }


                & .slider {
                    overflow: hidden;
                    border-radius: 0.5rem;

                    @media only screen and (max-width: 1024px) {
                        width: 0;
                        position: absolute;
                        right: 115%;

                    }

                    @media only screen and (min-width: 1025px) {
                        width: 100%;
                        position: relative;
                        right: unset;
                    }

                    & .rs-min,
                    .rs-max {
                        font-size: 0.8em;
                    }

                    & .rs-title {}

                    & .rs-track {}
                }
            }

            & .rs-wrapper:focus-within {

                & .slider {

                    @media only screen and (max-width: 1024px) {
                        width: var(--rs-width);
                        transition: width 300ms ease-in-out;
                    }

                }
            }
        }

        & .controls:has(input[name=rbgEffects]:checked) {
            display: flex;
        }
    }


    & #picturesArea {
        background-color: rgb(0, 0, 0);
        position: relative;
        grid-area: pictures;
        display: flex;
        z-index: 2;

        & .display {
            position: absolute;
            display: flex;
            justify-content: center;
            align-items: center;
            overflow: hidden;
            transition: 500ms ease-in-out;

            & canvas {
                /* border: 5px solid purple; */
                max-width: 97%;
                max-height: 97%;
            }
        }

        & .display.img-in {
            background-color: var(--color-display-in-bg);
            top: 0;
            left: 0;
            z-index: 2;
        }

        & .display.img-out {
            background-color: var(--color-display-out-bg);
            bottom: 0;
            right: 0;
            z-index: 1;
        }
    }
}


dialog {

    @media only screen and (max-width: 600px) {
        width: 90vw;
        height: 60vh;
    }

    @media only screen and (min-width: 601px) and (max-width: 1024px) {
        width: 80vw;
        height: 50vh;
    }

    @media only screen and (min-width: 1025px) and (max-width: 1440px) {
        width: 50vw;
        height: 35vh;
    }

    @media only screen and (min-width: 1441px) {
        width: 40vw;
        height: 30vh;
    }

    .wrapper {

        & .body {
            padding: 1.5rem;
            background-color: var(--color-global-bg);
            color: var(--color-global-btn-color);
            font-weight: bolder;

            & a,
            a:visited {
                color: var(--color-dlbar-btn-bg-active);
            }
        }

        & .footer {

            & button {
                font-weight: bolder;
                color: var(--color-global-btn-color);
            }
        }
    }
}

dialog::backdrop {
    background-color: #000000;
    opacity: 0.5;
}

dialog#diagInfo {

    & .wrapper {

        & .body {}
    }
}

dialog#diagContactme {

    & .wrapper {

        & .body {
            user-select: text;
        }
    }
}

@keyframes glow-add {
    from {
        background-color: rgb(128, 128, 192);
    }

    to {
        background-color: rgb(51, 51, 185);
    }
}

@keyframes glow-remove {
    from {
        background-color: rgb(196, 140, 140);
    }

    to {
        background-color: rgb(185, 77, 77);
    }
}